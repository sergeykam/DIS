/****************************************************
* Module name: SPI_API.txt
*
* Copyright 2005 TeaMiX as an unpublished work.
* All Rights Reserved.
*
* The information contained herein is confidential
* property of TeaMiX. The user, copying, transfer or
* disclosure of	such information is prohibited except
* by express written agreement with TeaMiX.
*
* First	written	on ______ by ______
*
* Module Description: description of SPI_API
*****************************************************/


------------------------------------------------------------
Описание библотеки SPI_API для микроконтроллеров AVR ATmega.
------------------------------------------------------------

Библиотека предназаначена для работы с аппаратным SPI (Serial Peripheral Interface) AVR ATmega.
Библиотека не требует других библиотек.

Библиотека не предусматривает настройку chipselect (для ATmega16 - PORTB4).
Если контроллер используется в режиме Slave, то Slave Select (SS pin) должен быть установлен на вход.
Если контроллер используется в режиме Master, то перед передачей данных необходимо установить Slave Select (SS pin) на выход и отключить по завершению передачи данных.


-------------------
Функции библиотеки:
-------------------

void SPI_init (U8 mode, U8 clk_prescaler);
U8 SPI_transfer (U8 *Tx_buffer, U8 *Rx_buffer, U8 length, void (*callback)(U8 *Rx_buffer, U8 length)).



void SPI_init (U8 mode, U8 clk_prescaler)
Инициализация SPI: задание режима работы и скорости передачи данных SPI.

	U8 mode:	режим работы SPI.
				Параметр задается в виде
				(1) + (2) + (3) + (4),
				где
				--------------------------------------------------------------------------------------
				(1):	SPI_SLAVE			-	Slave Mode,	ведомый;
												(значение по умолчанию)
						или
						SPI_MASTER			-	Master Mode, ведущий;
				--------------------------------------------------------------------------------------
				(2):	SPI_IDLE_SCK_LOW	-	свободное состояние синхросигнала (SCK) - логический 0
												активный фронт синхросигнала - нарастающий
												(значение по умолчанию)
						или
						SPI_IDLE_SCK_HIGH	-	свободное состояние синхросигнала (SCK) - логическая 1
												активный фронт синхросигнала - спадающий
				--------------------------------------------------------------------------------------
				(3):	SPI_SAMPLE_SETUP	-	выборка данных по активному фронту синхросигнала
												(значение по умолчанию)
						или
						SPI_SETUP_SAMPLE	-	выборка данных по неактивному фронту синхросигнала
				--------------------------------------------------------------------------------------
				(4):	SPI_MSB				-	передача старшим битом вперед
												(значение по умолчанию)
						или
						SPI_LSB				-	передача младшим битом вперед
				--------------------------------------------------------------------------------------
				Слагаемые могут следовать в любом порядке.
				Слагаемые могут пропускаться. Для пропущенных слагаемых будут выставлены значения по умолчанию.
				Чтобы выставить все значения по умолчанию, параметр mode кладется равным 0.
				Вместо (2) и (3) в качестве слагаемого можно использовать номер режима SPI: 0, 1, 2, 3.
				
	U8 clk_prescaler: 	делитель тактовой частоты микроконтроллера для формирования синхроимпульсов:
						2, 4, 8, 16, 32, 64, 128.
						Параметр задается для ведущего микроконтроллера (в Master Mode).
						
						
						
U8 SPI_transfer (U8 *Tx_buffer, U8 *Rx_buffer, U8 length, void (*callback)(U8 *Rx_buffer, U8 length))
Функция начинает обмен данными/передачу данных/прием данных.
Возвращает	0, если процесс начался успешно;
			число байт, еще не отправленных в предыдущем процессе SPI, в противном случае 
				(предыдущий процесс не закончен, SPI занят).
После завершения процесса вызывается функция обратного вызова (кроме нулевой посылки).

	U8 *Tx_buffer:	указатель на буфер передаваемых данных;
					если осуществляется только прием, параметр кладется равным 0.
	U8 *Rx_buffer:	указатель на буфер принимаемых данных;
					если осуществляется только передача, параметр кладется равным 0.
	U8 length:		длина посылки/пакета;
					нулевая посылка проверяет SPI;
					после нулевой посылки функция обратного вызова не вызывается.
	void (*callback)(U8 *Rx_buffer, U8 length) : указатель на функцию обратного вызова после завершения процесса;
			параметры:
			U8 *Rx_buffer:	указатель на буфер принимаемых данных;
							если осуществлялась только передача, параметр равен 0.
			U8 length:		длина посылки/пакета;
							после нулевой посылки функция обратного вызова не вызывается -
							параметр не равен 0.

